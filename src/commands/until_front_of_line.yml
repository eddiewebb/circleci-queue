parameters:
  this-branch-only:
    type: boolean
    default: true
    description: "Should we only consider jobs running on the same branch?"
  block-workflow:
    type: boolean
    # this is false at COMMAND level as intention is to only block CURRENT job.
    default: false
    description: "If true, this job will block until no other workflows with ANY JOBS with an earlier timestamp are running. Typically used as first job."
  max-wait-time:
    type: string
    default: "10"
    description: "How many minutes to wait before giving up."
  dont-quit:
    type: boolean
    default: false
    description: "Quitting is for losers. Force job through once time expires instead of failing."
  fail-instead-of-cancel:
    type: boolean
    default: false
    description: "Fail this command instead of canceling."
  force-cancel-previous:
    type: boolean
    default: false
    description: "No Mercy. Issue cancel commands for any previous competitors (only applies when dont-quit also true)"
  limit-branch-name:
    type: string
    default: "*"
    description: "Only apply queue logic on specified branch. "
  limit-workflow-name:
    type: string
    default: "*"
    description: "Only queue on a specified workflow. Consider combining this with `consider-branch`:`false`."
  # vcs-type --> pipeline.project.type
  confidence:
    type: string
    default: "1"
    description: "Due to scarce API, we need to requery the recent jobs list to ensure we're not just in a pending state for previous jobs.  This number indicates the threhold for API returning no previous pending jobs. Default is a single confirmation."
  circleci-api-key:
    type: env_var_name
    default: CIRCLECI_API_KEY
    description: "In case you use a different Environment Variable Name than CIRCLECI_API_KEY, supply it here."
  tag-pattern:
    type: string
    default: ""
    description: "Set to queue jobs using a regex pattern f.ex '^v[0-9]+\\.[0-9]+\\.[0-9]+$' to filter CIRCLECI_TAG"
  job-regex:
    type: string
    default: ""
    description: "Used to selectively block individual jobs in a workflow. ex '^deploy*'"
  circleci-hostname:
    type: string
    default: "circleci.com"
    description: "For server user to specifiy custom hostname for their server"
  my-pipeline:
    type: integer
  include-debug:
    type: boolean
    default: false


steps:
  - run:
      name: 'Queue - Import Parameters'
      command: |
        echo "export BLOCK_WORKFLOW=<<parameters.block-workflow>>" >> $BASH_ENV
        echo "export CCI_API_KEY_NAME=<< parameters.circleci-api-key >>" >> $BASH_ENV
        echo "export CIRCLECI_BASE_URL=https://<<parameters.circleci-hostname>>" >> $BASH_ENV
        echo "export CONFIDENCE_THRESHOLD=<<parameters.confidence>>" >> $BASH_ENV
        echo "export DEBUG=<<parameters.include-debug>>" >> $BASH_ENV
        echo "export DONT_QUIT=<<parameters.dont-quit>>" >> $BASH_ENV
        echo "export FAIL_INSTEAD_OF_CANCEL=<< parameters.fail-instead-of-cancel >>" >> $BASH_ENV
        echo "export FILTER_BRANCH=<< parameters.this-branch-only >>" >> $BASH_ENV
        echo "export FORCE_CANCEL_PREVIOUS=<<parameters.force-cancel-previous>>" >> $BASH_ENV
        echo "export JOB_REGEXP=\"<<parameters.job-regex>>\"" >> $BASH_ENV
        echo "export MAX_TIME='<<parameters.max-wait-time>>'" >> $BASH_ENV
        echo "export MY_BRANCH="$CIRCLE_BRANCH"" >> $BASH_ENV
        echo "export MY_PIPELINE_NUMBER=<<parameters.my-pipeline>>" >> $BASH_ENV
        echo "export ONLY_ON_BRANCH=<<parameters.limit-branch-name>>" >> $BASH_ENV
        echo "export ONLY_ON_WORKFLOW=<<parameters.limit-workflow-name>>" >> $BASH_ENV
        echo "export TAG_PATTERN=\"<<parameters.tag-pattern>>\"" >> $BASH_ENV

  - run:
      name: Queue Until Front of Line
      command: <<include(../scripts/loop.bash)>>
      shell: bash
