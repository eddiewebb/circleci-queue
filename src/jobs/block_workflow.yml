parameters:
  this-branch-only:
    type: boolean
    default: true
    description: "Should we only consider jobs running on the same branch?"
  block-workflow:
    type: boolean
    # this is true at JOB level as intention is to block workflow
    default: true
    description: "If true, this job will block until no other workflows with an earlier timestamp are running. Typically used as first job."
  max-wait-time:
    type: string
    default: "10"
    description: "How many minutes to wait before giving up."
  dont-quit:
    type: boolean
    default: false
    description: "Quitting is for losers. Force job through once time expires instead of failing."
  fail-instead-of-cancel:
    type: boolean
    default: false
    description: "Fail this command instead of canceling."
  force-cancel-previous:
    type: boolean
    default: false
    description: "No Mercy. Issue cancel commands for any previous competitors (only applies when dont-quit also true)"
  limit-branch-name:
    type: string
    default: "*"
    description: "Only apply queue logic on specified branch. "
  limit-workflow-name:
    type: string
    default: "*"
    description: "Only queue on a specified workflow. Consider combining this with `this-branch-only`:`false`."
  # vcs-type --> pipeline.project.type
  confidence:
    type: string
    default: "1"
    description: "Due to scarce API, we need to requery the recent jobs list to ensure we're not just in a pending state for previous jobs.  This number indicates the threhold for API returning no previous pending jobs. Default is a single confirmation."
  circleci-api-key:
    type: env_var_name
    default: CIRCLECI_API_KEY
    description: "In case you use a different Environment Variable Name than CIRCLECI_API_KEY, supply it here."
  tag-pattern:
    type: string
    default: ""
    description: "Set to queue jobs using a regex pattern f.ex '^v[0-9]+\\.[0-9]+\\.[0-9]+$' to filter CIRCLECI_TAG"
  job-regex:
    type: string
    default: ""
    description: "Used to selectively block individual jobs in a workflow. ex '^deploy*'"
  circleci-hostname:
    type: string
    default: "circleci.com"
    description: "For server user to specifiy custom hostname for their server"
  my-pipeline:
    type: integer
  include-debug:
    type: boolean
    default: false


docker:
  - image: cimg/base:stable
resource_class: small
steps:
  - until_front_of_line:
      block-workflow: <<parameters.block-workflow>>
      circleci-api-key: <<parameters.circleci-api-key>>
      circleci-hostname: <<parameters.circleci-hostname>>
      confidence: <<parameters.confidence>>
      dont-quit: <<parameters.dont-quit>>
      fail-instead-of-cancel: << parameters.fail-instead-of-cancel >>
      include-debug: <<parameters.include-debug>>
      job-regex: <<parameters.job-regex>>
      limit-branch-name: <<parameters.limit-branch-name>>
      limit-workflow-name: <<parameters.limit-workflow-name>>
      max-wait-time: <<parameters.max-wait-time>>
      my-pipeline: <<parameters.my-pipeline>>
      tag-pattern: <<parameters.tag-pattern>>
      this-branch-only: <<parameters.this-branch-only>>
